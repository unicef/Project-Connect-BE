# Generated by Django 2.2.15 on 2020-10-20 11:43

from django.db import migrations


def fix_schools_with_data_percentage(apps, schema_migration):
    Country = apps.get_model('locations', 'Country')
    CountryWeeklyStatus = apps.get_model('connection_statistics', 'CountryWeeklyStatus')
    SchoolWeeklyStatus = apps.get_model('connection_statistics', 'SchoolWeeklyStatus')

    for country in Country.objects.all():
        country_weekly = CountryWeeklyStatus.objects.filter(country=country).last()
        if country_weekly and country_weekly.schools_with_data_percentage > 0:
            qs = SchoolWeeklyStatus.objects.filter(school__country=country)
            total_school = qs.order_by('school_id').distinct('school_id').count()
            overall_connected_schools = qs.filter(connectivity=True).order_by('school_id').distinct('school_id').count()
            country_weekly.schools_with_data_percentage = 1.0 * overall_connected_schools / total_school
            country_weekly.save(update_fields=('schools_with_data_percentage',))


class Migration(migrations.Migration):

    dependencies = [
        ('connection_statistics', '0028_auto_20201012_1128'),
        ('locations', '0008_auto_20201019_0735'),
    ]

    operations = [
        migrations.RunPython(fix_schools_with_data_percentage, migrations.RunPython.noop),
    ]
